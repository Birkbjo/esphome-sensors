esphome:
  name: node-mcu
  platform: ESP8266
  board: nodemcu

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: ""

ota:
  password: ""

wifi:
  ssid: ""
  password: ""

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Node-Mcu Fallback Hotspot"
    password: ""

captive_portal:

spi:
  clk_pin: GPIO14 #yellow
  mosi_pin: GPIO13 #blue
  miso_pin: GPIO12 #not connected for using external SPI

# Example configuration entry
time:
  - platform: homeassistant
    id: homeassistant_time

font:
  - file: "fonts/roboto-thin.ttf"
    id: roboto_thin
    size: 50
  - file: "fonts/Roboto-Light.ttf"
    id: roboto
    size: 50
  - file: "fonts/Roboto-Light.ttf"
    id: roboto_small
    size: 10

#Dimensions: 128px x 296px
display:
  - platform: waveshare_epaper
    id: display4_2
  
    cs_pin: GPIO15 #orange
    dc_pin: GPIO05 #green
    busy_pin: GPIO00 #purple
    reset_pin: GPIO04 #white
    model: 4.20in
    #id: display_update
    update_interval: 300s
    #full_update_every: 60
    #rotation: 90°
    lambda: |-
      //it.line(0, 0, 50, 50);
      //ESP_LOGD(id(ute_temp_sensor).state);

      if(isnan(id(ute_temp_sensor).state)) {
          it.printf(70, 100, id(roboto), "Initializing...");
          return;
      }
      it.strftime(0, 0, id(roboto_small), "%H:%M", id(homeassistant_time).now());
  
      //if(id(ute_temp_sensor).state) {
      //  it.printf(it.get_width(), 0, id(roboto), TextAlign::TOP_RIGHT, "%.1f°C", id(ute_temp_sensor).state);
      // }

      it.printf(0, it.get_height(), id(roboto), TextAlign::BOTTOM_LEFT, "%.1f°C", id(stue_temp_sensor).state);

      it.printf(it.get_width(), it.get_height(), id(roboto), TextAlign::BOTTOM_RIGHT, "%.1f°C", id(bad_temp_sensor).state);
      //ESP_LOGD("printed", "should have printed");
      //it.line(35,45,15,150);
      //it.line(0,0,300,300);
      //it.graph(50, 220, id(ute_temp_graph));

      // super hack to get variable that holds different images
      if(id(weather_current_condition).has_state()) {
        display::Image * conditionImage; 
        std::string condition = id(weather_current_condition).state;
        std::map<std::string, display::Image *> images;
        images["sunny"] = sunny;
        images["clear_night"] = clear_night;
        images["cloudy"] = cloudy;
        images["fog"] = fog;
        images["hail"] = hail;
        images["lightning_rainy"] = lightning_rainy;
        images["lightning"] = lightning;
        images["partlycloudy"] = partlycloudy;
        images["pouring"] = pouring;
        images["rainy"] = rainy;
        images["snowy_rainy"] = snowy_rainy;
        images["snowy"] = snowy;
        images["windy_variant"] = windy_variant;
        images["windy"] = windy;

        conditionImage = images.at(condition);

        auto time = id(homeassistant_time).now();

       // ESP_LOGD("lambda", "hour is %d", time.hour);
        if(condition == "sunny" && (time.hour < 6 || time.hour > 22)) {
          conditionImage = clear_night;
        }


        //it.printf(30, 180, id(roboto), "%s", id(weather_current_condition).state.c_str());
        it.image(165, 10, conditionImage);
      }
      if(id(ute_temp_sensor).state) {
        it.printf(180, 75, id(roboto), TextAlign::TOP_CENTER, "%.1f°C", id(ute_temp_sensor).state);
       }
      

      //it.image(30, 100, id(id(weather_current_condition).state));

      ESP_LOGD("lambda", "updating screen");
      //it.image(150,100, id(lightning));
      //it.image(200,100, id(sunny));

graph:
  - id: ute_temp_graph
    sensor: ute_temp_sensor
    duration: 1h
    height: 70
    width: 300

sensor:
  - platform: homeassistant
    name: "Outside temp"
    entity_id: sensor.temperature_2
    id: ute_temp_sensor
    # on_value:
    #     - component.update: display4_2
      
  - platform: homeassistant
    name: "Bad temp"
    entity_id: sensor.temperature_11
    id: bad_temp_sensor
    # on_value:
    #    - component.update: display4_2
      
  - platform: homeassistant
    name: "Stue temp"
    entity_id: sensor.temperature_14
    id: stue_temp_sensor
    on_value:
        - component.update: display4_2

text_sensor:
  - platform: homeassistant
    name: "Skydekke"
    entity_id: weather.hg78c_hourly
    id: weather_current_condition
    on_value:
        - delay: 5s
        - component.update: display4_2

image:
  - resize: 70x70
    file: material-icons/pngs/clear_night.png
    id: clear_night
  - resize: 70x70
    file: material-icons/pngs/cloudy.png
    id: cloudy
  - resize: 70x70
    file: material-icons/pngs/fog.png
    id: fog
  - resize: 70x70
    file: material-icons/pngs/hail.png
    id: hail
  - resize: 70x70
    file: material-icons/pngs/lightning_rainy.png
    id: lightning_rainy
  - resize: 70x70
    file: material-icons/pngs/lightning.png
    id: lightning
  - resize: 70x70
    file: material-icons/pngs/partlycloudy.png
    id: partlycloudy
  - resize: 70x70
    file: material-icons/pngs/pouring.png
    id: pouring
  - resize: 70x70
    file: material-icons/pngs/rainy.png
    id: rainy
  - resize: 70x70
    file: material-icons/pngs/snowy_rainy.png
    id: snowy_rainy
  - resize: 70x70
    file: material-icons/pngs/snowy.png
    id: snowy
  - resize: 70x70
    file: material-icons/pngs/sunny.png
    id: sunny
  - resize: 70x70
    file: material-icons/pngs/windy_variant.png
    id: windy_variant
  - resize: 70x70
    file: material-icons/pngs/windy.png
    id: windy